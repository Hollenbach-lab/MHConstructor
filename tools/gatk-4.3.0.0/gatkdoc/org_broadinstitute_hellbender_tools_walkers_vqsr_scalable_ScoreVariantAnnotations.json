{
  "summary": "Scores variant calls in a VCF file based on site-level annotations using a previously trained model",
  "arguments": [
    {
      "summary": "If true, adds a PG tag to created SAM/BAM/CRAM files.",
      "name": "--add-output-sam-program-record",
      "synonyms": "-add-output-sam-program-record",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, adds a command line header line to created VCF files.",
      "name": "--add-output-vcf-command-line",
      "synonyms": "-add-output-vcf-command-line",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Names of the annotations to extract. Note that a requested annotation may in fact not be present at any extraction site; NaN missing values will be generated for such annotations.",
      "name": "--annotation",
      "synonyms": "-A",
      "type": "List[String]",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "read one or more arguments files and add them to the command line",
      "name": "--arguments_file",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Annotation key to use for calibration-sensitivity values in output.",
      "name": "--calibration-sensitivity-key",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "CALIBRATION_SENSITIVITY",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudPrefetchBuffer if unset.",
      "name": "--cloud-index-prefetch-buffer",
      "synonyms": "-CIPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "-1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable).",
      "name": "--cloud-prefetch-buffer",
      "synonyms": "-CPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "40",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.",
      "name": "--create-output-bam-index",
      "synonyms": "-OBI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a MD5 digest for any BAM/SAM/CRAM file created",
      "name": "--create-output-bam-md5",
      "synonyms": "-OBM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a VCF index when writing a coordinate-sorted VCF file.",
      "name": "--create-output-variant-index",
      "synonyms": "-OVI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a a MD5 digest any VCF file created.",
      "name": "--create-output-variant-md5",
      "synonyms": "-OVM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, don\u0027t cache bam indexes, this will reduce memory requirements but may harm performance if many intervals are specified.  Caching is automatically disabled if there are no intervals specified.",
      "name": "--disable-bam-index-caching",
      "synonyms": "-DBIC",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Read filters to be disabled before analysis",
      "name": "--disable-read-filter",
      "synonyms": "-DF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If specified, do not check the sequence dictionaries from our inputs for compatibility. Use at your own risk!",
      "name": "--disable-sequence-dictionary-validation",
      "synonyms": "-disable-sequence-dictionary-validation",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Disable all tool default read filters (WARNING: many tools will not function correctly without their default read filters on)",
      "name": "--disable-tool-default-read-filters",
      "synonyms": "-disable-tool-default-read-filters",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, VCF output will not be compressed.",
      "name": "--do-not-gzip-vcf-output",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, do not trust that unfiltered records in the resources contain only polymorphic sites. This may increase runtime if the resources are not sites-only VCFs.",
      "name": "--do-not-trust-all-polymorphic",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Format string to use for formatting score and calibration-sensitivity values in output.",
      "name": "--double-format",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "%.4f",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "One or more genomic intervals to exclude from processing",
      "name": "--exclude-intervals",
      "synonyms": "-XL",
      "type": "List[String]",
      "required": "no",
      "fulltext": "Use this argument to exclude certain parts of the genome from the analysis (like -L, but the opposite).\n This argument can be specified multiple times. You can use samtools-style intervals either explicitly on the\n command line (e.g. -XL 1 or -XL 1:100-200) or by loading in a file containing a list of intervals\n (e.g. -XL myFile.intervals).",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A configuration file to use with the GATK.",
      "name": "--gatk-config-file",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If the GCS bucket channel errors out, how many times it will attempt to re-initiate the connection",
      "name": "--gcs-max-retries",
      "synonyms": "-gcs-retries",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "20",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Project to bill when accessing \"requester pays\" buckets. If unset, these buckets cannot be accessed.  User must have storage.buckets.get permission on the bucket being accessed.",
      "name": "--gcs-project-for-requester-pays",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "\"\"",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "display the help message",
      "name": "--help",
      "synonyms": "-h",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, ignore all filters in the input VCF.",
      "name": "--ignore-all-filters",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Ignore the specified filter(s) in the input VCF.",
      "name": "--ignore-filter",
      "synonyms": "NA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If specified, indels with scores corresponding to a calibration sensitivity that is greater than or equal to this threshold will be hard filtered.",
      "name": "--indel-calibration-sensitivity-threshold",
      "synonyms": "NA",
      "type": "Double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "BAM/SAM/CRAM file containing reads",
      "name": "--input",
      "synonyms": "-I",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are excluding.",
      "name": "--interval-exclusion-padding",
      "synonyms": "-ixp",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -XL. For example, \u0027-XL 1:100\u0027 with a\n padding value of 20 would turn into \u0027-XL 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Interval merging rule for abutting intervals",
      "name": "--interval-merging-rule",
      "synonyms": "-imr",
      "type": "IntervalMergingRule",
      "required": "no",
      "fulltext": "By default, the program merges abutting intervals (i.e. intervals that are directly side-by-side but do not\n actually overlap) into a single continuous interval. However you can change this behavior if you want them to be\n treated as separate intervals instead.",
      "defaultValue": "ALL",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "ALL"
        },
        {
          "summary": "",
          "name": "OVERLAPPING_ONLY"
        }
      ]
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are including.",
      "name": "--interval-padding",
      "synonyms": "-ip",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -L. For example, \u0027-L 1:100\u0027 with a\n padding value of 20 would turn into \u0027-L 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Set merging approach to use for combining interval inputs",
      "name": "--interval-set-rule",
      "synonyms": "-isr",
      "type": "IntervalSetRule",
      "required": "no",
      "fulltext": "By default, the program will take the UNION of all intervals specified using -L and/or -XL. However, you can\n change this setting for -L, for example if you want to take the INTERSECTION of the sets instead. E.g. to\n perform the analysis only on chromosome 1 exomes, you could specify -L exomes.intervals -L 1 --interval-set-rule\n INTERSECTION. However, it is not possible to modify the merging approach for intervals passed using -XL (they will\n always be merged using UNION).\n\n Note that if you specify both -L and -XL, the -XL interval set will be subtracted from the -L interval set.",
      "defaultValue": "UNION",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "Take the union of all intervals",
          "name": "UNION"
        },
        {
          "summary": "Take the intersection of intervals (the subset that overlaps all intervals specified)",
          "name": "INTERSECTION"
        }
      ]
    },
    {
      "summary": "One or more genomic intervals over which to operate",
      "name": "--intervals",
      "synonyms": "-L",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Lenient processing of VCF files",
      "name": "--lenient",
      "synonyms": "-LE",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Name to use for low-score filter in output.",
      "name": "--low-score-filter-name",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "LOW_SCORE",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If non-zero, partitions VCF output into shards, each containing up to the given number of records.",
      "name": "--max-variants-per-shard",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Variant types to extract.",
      "name": "--mode",
      "synonyms": "NA",
      "type": "List[VariantType]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[SNP, INDEL]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "SNP"
        },
        {
          "summary": "",
          "name": "INDEL"
        }
      ]
    },
    {
      "summary": "Backend to use for scoring. JAVA_BGMM will use a pure Java implementation (ported from Python scikit-learn) of the Bayesian Gaussian Mixture Model. PYTHON_IFOREST will use the Python scikit-learn implementation of the IsolationForest method and will require that the corresponding Python dependencies are present in the environment. PYTHON_SCRIPT will use the script specified by the python-script argument. See the tool documentation for more details.",
      "name": "--model-backend",
      "synonyms": "NA",
      "type": "VariantAnnotationsModelBackend",
      "required": "no",
      "fulltext": "",
      "defaultValue": "PYTHON_IFOREST",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "JAVA_BGMM"
        },
        {
          "summary": "Use the script at org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/isolation-forest.py",
          "name": "PYTHON_IFOREST"
        },
        {
          "summary": "Use a user-provided script.",
          "name": "PYTHON_SCRIPT"
        }
      ]
    },
    {
      "summary": "Prefix for model files. This should be identical to the output prefix specified in TrainVariantAnnotationsModel.",
      "name": "--model-prefix",
      "synonyms": "NA",
      "type": "String",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "If true, omit alleles in output HDF5 files in order to decrease file sizes.",
      "name": "--omit-alleles-in-hdf5",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Prefix for output filenames.",
      "name": "--output",
      "synonyms": "-O",
      "type": "String",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "Python script used for specifying a custom scoring backend. If provided, model-backend must also be set to PYTHON_SCRIPT.",
      "name": "--python-script",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to suppress job-summary info on System.err.",
      "name": "--QUIET",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Read filters to be applied before analysis",
      "name": "--read-filter",
      "synonyms": "-RF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Indices to use for the read inputs. If specified, an index must be provided for every read input and in the same order as the read inputs. If this argument is not specified, the path to the index for each input will be inferred automatically.",
      "name": "--read-index",
      "synonyms": "-read-index",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The default stringency value SILENT can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.",
      "name": "--read-validation-stringency",
      "synonyms": "-VS",
      "type": "ValidationStringency",
      "required": "no",
      "fulltext": "",
      "defaultValue": "SILENT",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "STRICT"
        },
        {
          "summary": "",
          "name": "LENIENT"
        },
        {
          "summary": "",
          "name": "SILENT"
        }
      ]
    },
    {
      "summary": "Reference sequence",
      "name": "--reference",
      "synonyms": "-R",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Resource VCFs used to label extracted variants.",
      "name": "--resource",
      "synonyms": "NA",
      "type": "List[FeatureInput[VariantContext]]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The strategy to use for determining whether an input variant is present in a resource in non-allele-specific mode (--use-allele-specific-annotations false). START_POSITION: Start positions of input and resource variants must match. START_POSITION_AND_GIVEN_REPRESENTATION: The intersection of the sets of input and resource alleles (in their given representations) must also be non-empty. START_POSITION_AND_MINIMAL_REPRESENTATION: The intersection of the sets of input and resource alleles (after converting alleles to their minimal representations) must also be non-empty. This argument has no effect in allele-specific mode (--use-allele-specific-annotations true), in which the minimal representations of the input and resource alleles must match.",
      "name": "--resource-matching-strategy",
      "synonyms": "NA",
      "type": "ResourceMatchingStrategy",
      "required": "no",
      "fulltext": "",
      "defaultValue": "START_POSITION",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "START_POSITION"
        },
        {
          "summary": "",
          "name": "START_POSITION_AND_GIVEN_REPRESENTATION"
        },
        {
          "summary": "",
          "name": "START_POSITION_AND_MINIMAL_REPRESENTATION"
        }
      ]
    },
    {
      "summary": "Annotation key to use for score values in output.",
      "name": "--score-key",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "SCORE",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Output traversal statistics every time this many seconds elapse",
      "name": "--seconds-between-progress-updates",
      "synonyms": "-seconds-between-progress-updates",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "10.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the given sequence dictionary as the master/canonical sequence dictionary.  Must be a .dict file.",
      "name": "--sequence-dictionary",
      "synonyms": "-sequence-dictionary",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "display hidden arguments",
      "name": "--showHidden",
      "synonyms": "-showHidden",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "advanced",
      "options": []
    },
    {
      "summary": "If true, don\u0027t emit genotype fields when writing vcf file output.",
      "name": "--sites-only-vcf-output",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If specified, SNPs with scores corresponding to a calibration sensitivity that is greater than or equal to this threshold will be hard filtered.",
      "name": "--snp-calibration-sensitivity-threshold",
      "synonyms": "NA",
      "type": "Double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Annotation flag to use for labeling sites as SNPs in output. Set this to \"null\" to omit these labels.",
      "name": "--snp-key",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "snp",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Temp directory to use.",
      "name": "--tmp-dir",
      "synonyms": "NA",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, use the allele-specific versions of the specified annotations.",
      "name": "--use-allele-specific-annotations",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to use the JdkDeflater (as opposed to IntelDeflater)",
      "name": "--use-jdk-deflater",
      "synonyms": "-jdk-deflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to use the JdkInflater (as opposed to IntelInflater)",
      "name": "--use-jdk-inflater",
      "synonyms": "-jdk-inflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A VCF file containing variants",
      "name": "--variant",
      "synonyms": "-V",
      "type": "GATKPath",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "Control verbosity of logging.",
      "name": "--verbosity",
      "synonyms": "-verbosity",
      "type": "LogLevel",
      "required": "no",
      "fulltext": "",
      "defaultValue": "INFO",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "ERROR"
        },
        {
          "summary": "",
          "name": "WARNING"
        },
        {
          "summary": "",
          "name": "INFO"
        },
        {
          "summary": "",
          "name": "DEBUG"
        }
      ]
    },
    {
      "summary": "display the version number for this tool",
      "name": "--version",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    }
  ],
  "description": "Scores variant calls in a VCF file based on site-level annotations using a previously trained model.\n\n \u003cp\u003e\n     This tool is intended to be used as the last step in a variant-filtering workflow that supersedes the\n     VariantRecalibrator workflow. Using a previously trained model produced by TrainVariantAnnotationsModel,\n     this tool assigns a score to each call (with a lower score indicating that a call is more likely to be an artifact).\n     Each score can also be converted to a corresponding sensitivity with respect to a calibration set, if the latter is available.\n     Each VCF record can also be annotated with additional resource labels and/or hard filtered based on its\n     calibration-set sensitivity, if desired.\n \u003c/p\u003e\n\n \u003cp\u003e\n     Note that annotations and metadata are collected in memory during traversal until they are written to HDF5 files\n     upon completion of the traversal. Memory and disk requirements thus roughly scale linearly with both the number\n     of sites scored and the number of annotations. For large callsets, this tool may be run in parallel over separate\n     genomic shards using the StandardArgumentDefinitions#INTERVALS_LONG_NAME argument as usual.\n \u003c/p\u003e\n\n \u003cp\u003e\n     Scores and annotations are also output to HDF5 files, which may be viewed using\n     \u003ca href\u003d\"https://support.hdfgroup.org/products/java/hdfview/\"\u003ehdfview\u003c/a\u003e or loaded in Python using\n     \u003ca href\u003d\"http://www.pytables.org/\"\u003ePyTables\u003c/a\u003e or \u003ca href\u003d\"http://www.h5py.org/\"\u003eh5py\u003c/a\u003e.\n \u003c/p\u003e\n\n \u003ch3\u003eInputs\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         Input VCF file. Site-level annotations will be extracted from the contained variants (or alleles,\n         if the USE_ALLELE_SPECIFIC_ANNOTATIONS_LONG_NAME argument is specified).\n     \u003c/li\u003e\n     \u003cli\u003e\n         Annotations to use for scoring. These should be identical to those used in the ExtractVariantAnnotations\n         step to create the training set.\n     \u003c/li\u003e\n     \u003cli\u003e\n         Variant types (i.e., SNP and/or INDEL) to score. Logic for determining variant type was retained from\n         VariantRecalibrator; see VariantType. To use different models for SNPs and INDELs\n         (e.g., if it is desired to use different sets of annotations for each variant type), one can first run\n         this tool to score SNPs and then again on the resulting output to score INDELs.\n     \u003c/li\u003e\n     \u003cli\u003e\n         Model prefix. This should denote the path of model files produced by TrainVariantAnnotationsModel.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Model backend. This should be identical to that specified in TrainVariantAnnotationsModel.\n         The default Python IsolationForest implementation requires either the GATK Python environment\n         or that certain Python packages (argparse, h5py, numpy, sklearn, and dill) are otherwise available.\n         A custom backend can also be specified in conjunction with the PYTHON_SCRIPT_LONG_NAME argument.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Resource VCF file(s). See the corresponding documentation in ExtractVariantAnnotations.\n         In typical usage, the same resource VCFs and tags provided to that tool should also be provided here.\n         In addition, the sites-only VCF that is produced by that tool can also be provided here and used to\n         mark those labeled sites that were extracted, which can be useful if these are a subset of the resource sites.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Calibration-set sensitivity thresholds for SNPs and INDELs. If the corresponding SNP or INDEL\n         calibration-set scores are available in the provided model files, sites that have a calibration-set\n         sensitivity falling above the corresponding threshold (i.e., a score falling below the corresponding\n         score threshold) will have a filter applied.\n     \u003c/li\u003e\n     \u003cli\u003e\n         Output prefix.\n         This is used as the basename for output files.\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eOutputs\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         Scored VCF file and index. The VCF will not be gzipped if the DO_NOT_GZIP_VCF_OUTPUT_LONG_NAME\n         argument is set to true. The INFO field in each VCF record will be annotated with:\n\n         \u003cp\u003e\n             1) a score (with a key as given by the SCORE_KEY_LONG_NAME argument,\n             which has a default value of DEFAULT_SCORE_KEY),\n         \u003c/p\u003e\n         \u003cp\u003e\n             2) if resources are provided, flags corresponding to the labels (e.g.,\n             LabeledVariantAnnotationsData#TRAINING_LABEL, LabeledVariantAnnotationsData#CALIBRATION_LABEL, etc.)\n             of resources containing the record,\n         \u003c/p\u003e\n         \u003cp\u003e\n             3) if the SNP_KEY_LONG_NAME argument (which has a default value of DEFAULT_SNP_KEY)\n             is non-null, a flag corresponding to whether a site is treated as a SNP,\n         \u003c/p\u003e\n         \u003cp\u003e\n             4) if SNP_CALIBRATION_SENSITIVITY_THRESHOLD_LONG_NAME and/or\n             INDEL_CALIBRATION_SENSITIVITY_THRESHOLD_LONG_NAME are provided, a filter (with name given by\n             the LOW_SCORE_FILTER_NAME_LONG_NAME argument, which has a default value of\n             DEFAULT_LOW_SCORE_FILTER_NAME) will be applied if a record has a calibration-set sensitivity\n             falling above the appropriate threshold (i.e., if it has a score falling below the corresponding\n             score threshold).\n         \u003c/p\u003e\n         \u003cp\u003e\n             If USE_ALLELE_SPECIFIC_ANNOTATIONS_LONG_NAME is true, the score, SNP flag, calibration sensitivity,\n             and filter appropriate for the highest scoring allele are used; however, the resource labels for all alleles\n             are applied.\n         \u003c/p\u003e\n\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Annotations HDF5 file (.annot.hdf5). Annotation data and metadata for all scored sites\n         (labeled and unlabeled) are stored in the HDF5 directory structure given in the documentation for the\n         ExtractVariantAnnotations tool. This file will only be produced if the number of scored sites\n         is nonzero.\n         \u003c/p\u003e\n\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Scores HDF5 file (.scores.hdf5). Scores for all scored sites are stored in the\n         HDF5 path VariantAnnotationsScorer#SCORES_PATH. Scores are given in the same order as records\n         in both the VCF and the annotations HDF5 file. This file will only be produced if the number of scored sites\n         is nonzero.\n         \u003c/p\u003e\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eUsage examples\u003c/h3\u003e\n\n \u003cp\u003e\n     Score sites using a model (produced by TrainVariantAnnotationsModel using the default\n     VariantAnnotationsModelBackend#PYTHON_IFOREST model backend and contained in the directory\n     model_dir), producing the outputs 1) output.vcf.gz, 2) output.vcf.gz.tbi,\n     3) output.annot.hdf5, and 4) output.scores.hdf5. Note that extract.vcf.gz is\n     produced by ExtractVariantAnnotations. Records will be filtered according to the values provided to the\n     SNP_CALIBRATION_SENSITIVITY_THRESHOLD_LONG_NAME and INDEL_CALIBRATION_SENSITIVITY_THRESHOLD_LONG_NAME\n     arguments; the values below are only meant to be illustrative and should be set as appropriate for a given analysis.\n     Note that the MODE_LONG_NAME arguments are made explicit here, although both SNP and INDEL modes are\n     selected by default.\n\n \u003cpre\u003e\n     gatk ScoreVariantAnnotations \\\n          -V input.vcf \\\n          -A annotation_1 \\\n          ...\n          -A annotation_N \\\n          --model-prefix model_dir \\\n          --mode SNP \\\n          --resource:snp-training,training\u003dtrue snp-training.vcf \\\n          --resource:snp-calibration,calibration\u003dtrue snp-calibration.vcf \\\n          --mode INDEL \\\n          --resource:indel-training,training\u003dtrue indel-training.vcf \\\n          --resource:indel-calibration,calibration\u003dtrue indel-calibration.vcf \\\n          --resource:extracted,extracted\u003dtrue extract.vcf.gz \\\n          --snp-calibration-sensitivity-threshold 0.99 \\\n          --indel-calibration-sensitivity-threshold 0.99 \\\n          -O output\n \u003c/pre\u003e\n\n \u003cp\u003e\n     One may chain together two runs of this tool to score SNPs and INDELs using different models\n     (note that SNP and INDEL models have \"snp\" and \"indel\" tags in their respective filenames, so these\n     models can still be contained in the same model_dir directory).\n     This may have implications for mixed SNP/INDEL sites, especially if filters are applied; see also the\n     IGNORE_ALL_FILTERS_LONG_NAME and IGNORE_FILTER_LONG_NAME arguments.\n\n \u003cpre\u003e\n     gatk ScoreVariantAnnotations \\\n          -V input.vcf \\\n          -A snp_annotation_1 \\\n          ...\n          -A snp_annotation_N \\\n          --model-prefix model_dir \\\n          --mode SNP \\\n          --resource:snp-training,training\u003dtrue snp-training.vcf \\\n          --resource:snp-calibration,calibration\u003dtrue snp-calibration.vcf \\\n          --resource:extracted,extracted\u003dtrue snp-extract.vcf.gz \\\n          --snp-calibration-sensitivity-threshold 0.99 \\\n          -O intermediate-output\n\n     gatk ScoreVariantAnnotations \\\n          -V intermediate-output.vcf \\\n          -A indel_annotation_1 \\\n          ...\n          -A indel_annotation_M \\\n          --model-prefix model_dir \\\n          --mode INDEL \\\n          --resource:indel-training,training\u003dtrue indel-training.vcf \\\n          --resource:indel-calibration,calibration\u003dtrue indel-calibration.vcf \\\n          --resource:extracted,extracted\u003dtrue indel-extract.vcf.gz \\\n          --indel-calibration-sensitivity-threshold 0.99 \\\n          -O output\n \u003c/pre\u003e\n\n \u003ch3\u003eCustom modeling/scoring backends (ADVANCED)\u003c/h3\u003e\n\n \u003cp\u003e\n     The primary scoring functionality performed by this tool is accomplished by a \"scoring backend\"\n     whose fundamental contract is to take an input annotation matrix and to output corresponding scores,\n     with both input and output given as HDF5 files. Rather than using one of the available, implemented backends,\n     advanced users may provide their own backend via the PYTHON_SCRIPT_LONG_NAME argument.\n     See documentation in the modeling and scoring interfaces (VariantAnnotationsModel and\n     VariantAnnotationsScorer, respectively), as well as the default Python IsolationForest implementation at\n     PythonSklearnVariantAnnotationsScorer and\n     src/main/resources/org/broadinstitute/hellbender/tools/walkers/vqsr/scalable/isolation-forest.py.\n \u003c/p\u003e\n\n DEVELOPER NOTE: See documentation in LabeledVariantAnnotationsWalker.",
  "name": "ScoreVariantAnnotations",
  "group": "Variant Filtering",
  "beta": true,
  "experimental": false
}