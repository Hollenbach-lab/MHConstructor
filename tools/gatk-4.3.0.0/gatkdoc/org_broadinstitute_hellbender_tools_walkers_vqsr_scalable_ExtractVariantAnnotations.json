{
  "summary": "Extracts site-level variant annotations, labels, and other metadata from a VCF file to HDF5 files",
  "arguments": [
    {
      "summary": "If true, adds a PG tag to created SAM/BAM/CRAM files.",
      "name": "--add-output-sam-program-record",
      "synonyms": "-add-output-sam-program-record",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, adds a command line header line to created VCF files.",
      "name": "--add-output-vcf-command-line",
      "synonyms": "-add-output-vcf-command-line",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Names of the annotations to extract. Note that a requested annotation may in fact not be present at any extraction site; NaN missing values will be generated for such annotations.",
      "name": "--annotation",
      "synonyms": "-A",
      "type": "List[String]",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "read one or more arguments files and add them to the command line",
      "name": "--arguments_file",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudPrefetchBuffer if unset.",
      "name": "--cloud-index-prefetch-buffer",
      "synonyms": "-CIPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "-1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable).",
      "name": "--cloud-prefetch-buffer",
      "synonyms": "-CPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "40",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.",
      "name": "--create-output-bam-index",
      "synonyms": "-OBI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a MD5 digest for any BAM/SAM/CRAM file created",
      "name": "--create-output-bam-md5",
      "synonyms": "-OBM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a VCF index when writing a coordinate-sorted VCF file.",
      "name": "--create-output-variant-index",
      "synonyms": "-OVI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a a MD5 digest any VCF file created.",
      "name": "--create-output-variant-md5",
      "synonyms": "-OVM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, don\u0027t cache bam indexes, this will reduce memory requirements but may harm performance if many intervals are specified.  Caching is automatically disabled if there are no intervals specified.",
      "name": "--disable-bam-index-caching",
      "synonyms": "-DBIC",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Read filters to be disabled before analysis",
      "name": "--disable-read-filter",
      "synonyms": "-DF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If specified, do not check the sequence dictionaries from our inputs for compatibility. Use at your own risk!",
      "name": "--disable-sequence-dictionary-validation",
      "synonyms": "-disable-sequence-dictionary-validation",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Disable all tool default read filters (WARNING: many tools will not function correctly without their default read filters on)",
      "name": "--disable-tool-default-read-filters",
      "synonyms": "-disable-tool-default-read-filters",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, VCF output will not be compressed.",
      "name": "--do-not-gzip-vcf-output",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, do not trust that unfiltered records in the resources contain only polymorphic sites. This may increase runtime if the resources are not sites-only VCFs.",
      "name": "--do-not-trust-all-polymorphic",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "One or more genomic intervals to exclude from processing",
      "name": "--exclude-intervals",
      "synonyms": "-XL",
      "type": "List[String]",
      "required": "no",
      "fulltext": "Use this argument to exclude certain parts of the genome from the analysis (like -L, but the opposite).\n This argument can be specified multiple times. You can use samtools-style intervals either explicitly on the\n command line (e.g. -XL 1 or -XL 1:100-200) or by loading in a file containing a list of intervals\n (e.g. -XL myFile.intervals).",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A configuration file to use with the GATK.",
      "name": "--gatk-config-file",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If the GCS bucket channel errors out, how many times it will attempt to re-initiate the connection",
      "name": "--gcs-max-retries",
      "synonyms": "-gcs-retries",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "20",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Project to bill when accessing \"requester pays\" buckets. If unset, these buckets cannot be accessed.  User must have storage.buckets.get permission on the bucket being accessed.",
      "name": "--gcs-project-for-requester-pays",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "\"\"",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "display the help message",
      "name": "--help",
      "synonyms": "-h",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, ignore all filters in the input VCF.",
      "name": "--ignore-all-filters",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Ignore the specified filter(s) in the input VCF.",
      "name": "--ignore-filter",
      "synonyms": "NA",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "BAM/SAM/CRAM file containing reads",
      "name": "--input",
      "synonyms": "-I",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are excluding.",
      "name": "--interval-exclusion-padding",
      "synonyms": "-ixp",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -XL. For example, \u0027-XL 1:100\u0027 with a\n padding value of 20 would turn into \u0027-XL 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Interval merging rule for abutting intervals",
      "name": "--interval-merging-rule",
      "synonyms": "-imr",
      "type": "IntervalMergingRule",
      "required": "no",
      "fulltext": "By default, the program merges abutting intervals (i.e. intervals that are directly side-by-side but do not\n actually overlap) into a single continuous interval. However you can change this behavior if you want them to be\n treated as separate intervals instead.",
      "defaultValue": "ALL",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "ALL"
        },
        {
          "summary": "",
          "name": "OVERLAPPING_ONLY"
        }
      ]
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are including.",
      "name": "--interval-padding",
      "synonyms": "-ip",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -L. For example, \u0027-L 1:100\u0027 with a\n padding value of 20 would turn into \u0027-L 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Set merging approach to use for combining interval inputs",
      "name": "--interval-set-rule",
      "synonyms": "-isr",
      "type": "IntervalSetRule",
      "required": "no",
      "fulltext": "By default, the program will take the UNION of all intervals specified using -L and/or -XL. However, you can\n change this setting for -L, for example if you want to take the INTERSECTION of the sets instead. E.g. to\n perform the analysis only on chromosome 1 exomes, you could specify -L exomes.intervals -L 1 --interval-set-rule\n INTERSECTION. However, it is not possible to modify the merging approach for intervals passed using -XL (they will\n always be merged using UNION).\n\n Note that if you specify both -L and -XL, the -XL interval set will be subtracted from the -L interval set.",
      "defaultValue": "UNION",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "Take the union of all intervals",
          "name": "UNION"
        },
        {
          "summary": "Take the intersection of intervals (the subset that overlaps all intervals specified)",
          "name": "INTERSECTION"
        }
      ]
    },
    {
      "summary": "One or more genomic intervals over which to operate",
      "name": "--intervals",
      "synonyms": "-L",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Lenient processing of VCF files",
      "name": "--lenient",
      "synonyms": "-LE",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If non-zero, partitions VCF output into shards, each containing up to the given number of records.",
      "name": "--max-variants-per-shard",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Maximum number of unlabeled variants to extract. If greater than zero, reservoir sampling will be used to randomly sample this number of sites from input sites that are not present in the specified resources. Choice of this number should be guided by considerations for training the negative model in TrainVariantAnnotationsModel; users may wish to choose a number that is comparable to the expected size of the labeled training set or that is compatible with available memory resources.",
      "name": "--maximum-number-of-unlabeled-variants",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Variant types to extract.",
      "name": "--mode",
      "synonyms": "NA",
      "type": "List[VariantType]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[SNP, INDEL]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "SNP"
        },
        {
          "summary": "",
          "name": "INDEL"
        }
      ]
    },
    {
      "summary": "If true, omit alleles in output HDF5 files in order to decrease file sizes.",
      "name": "--omit-alleles-in-hdf5",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Prefix for output filenames.",
      "name": "--output",
      "synonyms": "-O",
      "type": "String",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "Whether to suppress job-summary info on System.err.",
      "name": "--QUIET",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Read filters to be applied before analysis",
      "name": "--read-filter",
      "synonyms": "-RF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Indices to use for the read inputs. If specified, an index must be provided for every read input and in the same order as the read inputs. If this argument is not specified, the path to the index for each input will be inferred automatically.",
      "name": "--read-index",
      "synonyms": "-read-index",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The default stringency value SILENT can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.",
      "name": "--read-validation-stringency",
      "synonyms": "-VS",
      "type": "ValidationStringency",
      "required": "no",
      "fulltext": "",
      "defaultValue": "SILENT",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "STRICT"
        },
        {
          "summary": "",
          "name": "LENIENT"
        },
        {
          "summary": "",
          "name": "SILENT"
        }
      ]
    },
    {
      "summary": "Reference sequence",
      "name": "--reference",
      "synonyms": "-R",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Random seed to use for reservoir sampling of unlabeled variants.",
      "name": "--reservoir-sampling-random-seed",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Resource VCFs used to label extracted variants.",
      "name": "--resource",
      "synonyms": "NA",
      "type": "List[FeatureInput[VariantContext]]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "The strategy to use for determining whether an input variant is present in a resource in non-allele-specific mode (--use-allele-specific-annotations false). START_POSITION: Start positions of input and resource variants must match. START_POSITION_AND_GIVEN_REPRESENTATION: The intersection of the sets of input and resource alleles (in their given representations) must also be non-empty. START_POSITION_AND_MINIMAL_REPRESENTATION: The intersection of the sets of input and resource alleles (after converting alleles to their minimal representations) must also be non-empty. This argument has no effect in allele-specific mode (--use-allele-specific-annotations true), in which the minimal representations of the input and resource alleles must match.",
      "name": "--resource-matching-strategy",
      "synonyms": "NA",
      "type": "ResourceMatchingStrategy",
      "required": "no",
      "fulltext": "",
      "defaultValue": "START_POSITION",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "START_POSITION"
        },
        {
          "summary": "",
          "name": "START_POSITION_AND_GIVEN_REPRESENTATION"
        },
        {
          "summary": "",
          "name": "START_POSITION_AND_MINIMAL_REPRESENTATION"
        }
      ]
    },
    {
      "summary": "Output traversal statistics every time this many seconds elapse",
      "name": "--seconds-between-progress-updates",
      "synonyms": "-seconds-between-progress-updates",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "10.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the given sequence dictionary as the master/canonical sequence dictionary.  Must be a .dict file.",
      "name": "--sequence-dictionary",
      "synonyms": "-sequence-dictionary",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "display hidden arguments",
      "name": "--showHidden",
      "synonyms": "-showHidden",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "advanced",
      "options": []
    },
    {
      "summary": "If true, don\u0027t emit genotype fields when writing vcf file output.",
      "name": "--sites-only-vcf-output",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Temp directory to use.",
      "name": "--tmp-dir",
      "synonyms": "NA",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, use the allele-specific versions of the specified annotations.",
      "name": "--use-allele-specific-annotations",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to use the JdkDeflater (as opposed to IntelDeflater)",
      "name": "--use-jdk-deflater",
      "synonyms": "-jdk-deflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to use the JdkInflater (as opposed to IntelInflater)",
      "name": "--use-jdk-inflater",
      "synonyms": "-jdk-inflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A VCF file containing variants",
      "name": "--variant",
      "synonyms": "-V",
      "type": "GATKPath",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "Control verbosity of logging.",
      "name": "--verbosity",
      "synonyms": "-verbosity",
      "type": "LogLevel",
      "required": "no",
      "fulltext": "",
      "defaultValue": "INFO",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "ERROR"
        },
        {
          "summary": "",
          "name": "WARNING"
        },
        {
          "summary": "",
          "name": "INFO"
        },
        {
          "summary": "",
          "name": "DEBUG"
        }
      ]
    },
    {
      "summary": "display the version number for this tool",
      "name": "--version",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    }
  ],
  "description": "Extracts site-level variant annotations, labels, and other metadata from a VCF file to HDF5 files.\n\n \u003cp\u003e\n     This tool is intended to be used as the first step in a variant-filtering workflow that supersedes the\n     VariantRecalibrator workflow. This tool extracts site-level annotations, labels, and other relevant metadata\n     from variant sites (or alleles, in allele-specific mode) that are or are not present in specified labeled\n     resource VCFs (e.g., training or calibration VCFs). Input sites that are present in the resources are considered\n     labeled; each site can have multiple labels if it is present in multiple resources. Other input sites that are\n     not present in any resources are considered unlabeled and can be randomly sampled using reservoir sampling;\n     extraction of these is optional. The outputs of the tool are HDF5 files containing the extracted data for\n     labeled and (optional) unlabeled variant sets, as well as a sites-only indexed VCF containing the labeled variants.\n \u003c/p\u003e\n \n \u003cp\u003e\n     The extracted sets can be provided as input to the TrainVariantAnnotationsModel tool\n     to produce an annotation-based model for scoring variant calls. This model can in turn be provided\n     along with a VCF file to the ScoreVariantAnnotations tool, which assigns a score to each call\n     (with a lower score indicating that a call is more likely to be an artifact and should perhaps be filtered).\n     Each score can also be converted to a corresponding sensitivity with respect to a calibration set, if the latter is available.\n \u003c/p\u003e\n\n \u003cp\u003e\n     Note that annotations and metadata are collected in memory during traversal until they are written to HDF5 files\n     upon completion of the traversal. Memory requirements thus roughly scale linearly with both the number of sites\n     extracted and the number of annotations.\n \u003c/p\u003e\n\n \u003cp\u003e\n     Note that HDF5 files may be viewed using \u003ca href\u003d\"https://support.hdfgroup.org/products/java/hdfview/\"\u003ehdfview\u003c/a\u003e\n     or loaded in Python using \u003ca href\u003d\"http://www.pytables.org/\"\u003ePyTables\u003c/a\u003e or \u003ca href\u003d\"http://www.h5py.org/\"\u003eh5py\u003c/a\u003e.\n \u003c/p\u003e\n \n \u003ch3\u003eInputs\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         Input VCF file. Site-level annotations will be extracted from the contained variants (or alleles, \n         if the USE_ALLELE_SPECIFIC_ANNOTATIONS_LONG_NAME argument is specified).\n     \u003c/li\u003e\n     \u003cli\u003e\n         Annotations to extract.\n     \u003c/li\u003e\n     \u003cli\u003e\n         Variant types (i.e., SNP and/or INDEL) to extract. Logic for determining variant type was retained from\n         VariantRecalibrator; see VariantType. Extracting SNPs and INDELs separately in two runs of\n         this tool can be useful if one wishes to extract different sets of annotations for each variant type,\n         for example.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Resource VCF file(s). Each resource should be tagged with a label, which will be assigned to\n         extracted sites that are present in the resource. In typical use, the LabeledVariantAnnotationsData#TRAINING_LABEL\n         and LabeledVariantAnnotationsData#CALIBRATION_LABEL labels should be used to tag at least one resource\n         apiece. The resulting sets of sites will be used for model training and conversion of scores to\n         calibration-set sensitivity, respectively; the trustworthiness of the respective resources should be\n         taken into account accordingly. The LabeledVariantAnnotationsData#SNP_LABEL label is\n         reserved by the tool, as it is used to label sites determined to be SNPs, and thus it cannot be used to tag\n         provided resources.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Maximum number of unlabeled variants (or alleles) to randomly sample with reservoir sampling.\n         If nonzero, annotations will also be extracted from unlabeled sites (i.e., those that are not present\n         in the labeled resources).\n     \u003c/li\u003e\n     \u003cli\u003e\n         Output prefix.\n         This is used as the basename for output files.\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eOutputs\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         (Optional) Labeled-annotations HDF5 file (.annot.hdf5). Annotation data and metadata for those sites that\n         are present in labeled resources are stored in the following HDF5 directory structure:\n\n         \u003cp\u003e\n           |--- alleles\u003cbr\u003e\n           |    |--- alt\u003cbr\u003e\n           |    |--- ref\u003cbr\u003e\n           |--- annotations\u003cbr\u003e\n           |    |--- chunk_0\u003cbr\u003e\n           |    |--- ...\u003cbr\u003e\n           |    |--- chunk_{num_chunks - 1}\u003cbr\u003e\n           |    |--- names\u003cbr\u003e\n           |    |--- num_chunks\u003cbr\u003e\n           |    |--- num_columns\u003cbr\u003e\n           |    |--- num_rows\u003cbr\u003e\n           |--- intervals\u003cbr\u003e\n           |    |--- indexed_contig_names\u003cbr\u003e\n           |    |--- transposed_index_start_end\u003cbr\u003e\n           |--- labels\u003cbr\u003e\n           |    |--- snp\u003cbr\u003e\n           |    |--- ... (e.g., training, calibration, etc.)\u003cbr\u003e\n           |    |--- ...\u003cbr\u003e\n         \u003c/p\u003e\n\n         \u003cp\u003e\n             Here, each chunk is a double matrix, with dimensions given by (number of sites in the chunk) x (number of annotations).\n             See the methods HDF5Utils#writeChunkedDoubleMatrix and HDF5Utils#writeIntervals for additional details.\n             If USE_ALLELE_SPECIFIC_ANNOTATIONS_LONG_NAME is specified, each record corresponds to an individual allele;\n             otherwise, each record corresponds to a variant site, which may contain multiple alleles.\n             Storage of alleles can be omitted using the OMIT_ALLELES_IN_HDF5_LONG_NAME argument, which will reduce\n             the size of the file. This file will only be produced if resources are provided and the number of extracted\n             labeled sites is nonzero.\n         \u003c/p\u003e\n\n     \u003c/li\u003e\n     \u003cli\u003e\n         Labeled sites-only VCF file and index. The VCF will not be gzipped if the DO_NOT_GZIP_VCF_OUTPUT_LONG_NAME\n         argument is set to true. The VCF can be provided as a resource in subsequent runs of\n         ScoreVariantAnnotations and used to indicate labeled sites that were extracted.\n         This can be useful if the StandardArgumentDefinitions#INTERVALS_LONG_NAME argument was used to\n         subset sites in training or calibration resources for extraction; this may occur when setting up\n         training/validation/test splits, for example. Note that records for the random sample of unlabeled sites are\n         currently not included in the VCF.\n     \u003c/li\u003e\n     \u003cli\u003e\n         (Optional) Unlabeled-annotations HDF5 file. This will have the same directory structure as in the\n         labeled-annotations HDF5 file. However, note that records are currently written in the order they\n         appear in the downsampling reservoir after random sampling, and hence, are not in genomic order.\n         This file will only be produced if a nonzero value of the MAXIMUM_NUMBER_OF_UNLABELED_VARIANTS_LONG_NAME\n         argument is provided.\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eUsage examples\u003c/h3\u003e\n\n \u003cp\u003e\n     Extract annotations from training/calibration SNP/INDEL sites, producing the outputs\n     1) extract.annot.hdf5, 2) extract.vcf.gz, and 3) extract.vcf.gz.tbi.\n     The HDF5 file can then be provided to TrainVariantAnnotationsModel\n     to train a model using a positive-only approach. Note that the MODE_LONG_NAME arguments are made\n     explicit here, although both SNP and INDEL modes are selected by default.\n\n \u003cpre\u003e\n     gatk ExtractVariantAnnotations \\\n          -V input.vcf \\\n          -A annotation_1 \\\n          ...\n          -A annotation_N \\\n          --mode SNP \\\n          --resource:snp-training,training\u003dtrue snp-training.vcf \\\n          --resource:snp-calibration,calibration\u003dtrue snp-calibration.vcf \\\n          --mode INDEL \\\n          --resource:indel-training,training\u003dtrue indel-training.vcf \\\n          --resource:indel-calibration,calibration\u003dtrue indel-calibration.vcf \\\n          -O extract\n \u003c/pre\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n     Extract annotations from both training/calibration SNP/INDEL sites and a random sample of\n     1000000 unlabeled (i.e., non-training/calibration) sites, producing the outputs\n     1) extract.annot.hdf5, 2) extract.unlabeled.annot.hdf5, 3) extract.vcf.gz,\n     and 4) extract.vcf.gz.tbi. The HDF5 files can then be provided to TrainVariantAnnotationsModel\n     to train a model using a positive-negative approach (similar to that used in VariantRecalibrator).\n     Note that the MODE_LONG_NAME arguments are made explicit here, although both SNP and INDEL modes are\n     selected by default.\n\n \u003cpre\u003e\n     gatk ExtractVariantAnnotations \\\n          -V input.vcf \\\n          -A annotation_1 \\\n          ...\n          -A annotation_N \\\n          --mode SNP \\\n          --resource:snp-training,training\u003dtrue snp-training.vcf \\\n          --resource:snp-calibration,calibration\u003dtrue snp-calibration.vcf \\\n          --mode INDEL \\\n          --resource:indel-training,training\u003dtrue indel-training.vcf \\\n          --resource:indel-calibration,calibration\u003dtrue indel-calibration.vcf \\\n          --maximum-number-of-unlableled-variants 1000000\n          -O extract\n \u003c/pre\u003e\n \u003c/p\u003e\n\n \u003cp\u003e\n     In the (atypical) event that resource VCFs are unavailable, one can still extract annotations from a random sample of\n     unlabeled sites, producing the outputs 1) extract.unlabeled.annot.hdf5,\n     2) extract.vcf.gz (which will contain no records), and 3) extract.vcf.gz.tbi.\n     This random sample cannot be used by TrainVariantAnnotationsModel, but may still be useful for\n     exploratory analyses. Note that the MODE_LONG_NAME arguments are made explicit here, although both\n     SNP and INDEL modes are selected by default.\n\n \u003cpre\u003e\n     gatk ExtractVariantAnnotations \\\n          -V input.vcf \\\n          -A annotation_1 \\\n          ...\n          -A annotation_N \\\n          --mode SNP \\\n          --mode INDEL \\\n          --maximum-number-of-unlableled-variants 1000000\n          -O extract\n \u003c/pre\u003e\n \u003c/p\u003e\n\n DEVELOPER NOTE: See documentation in LabeledVariantAnnotationsWalker.",
  "name": "ExtractVariantAnnotations",
  "group": "Variant Filtering",
  "beta": true,
  "experimental": false
}