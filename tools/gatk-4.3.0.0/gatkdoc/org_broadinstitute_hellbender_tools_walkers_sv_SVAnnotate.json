{
  "summary": "Adds gene overlap and variant consequence annotations to SV VCF from GATK-SV pipeline",
  "arguments": [
    {
      "summary": "If true, adds a PG tag to created SAM/BAM/CRAM files.",
      "name": "--add-output-sam-program-record",
      "synonyms": "-add-output-sam-program-record",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, adds a command line header line to created VCF files.",
      "name": "--add-output-vcf-command-line",
      "synonyms": "-add-output-vcf-command-line",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "read one or more arguments files and add them to the command line",
      "name": "--arguments_file",
      "synonyms": "NA",
      "type": "List[File]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable). Defaults to cloudPrefetchBuffer if unset.",
      "name": "--cloud-index-prefetch-buffer",
      "synonyms": "-CIPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "-1",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Size of the cloud-only prefetch buffer (in MB; 0 to disable).",
      "name": "--cloud-prefetch-buffer",
      "synonyms": "-CPB",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "40",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If true, create a BAM/CRAM index when writing a coordinate-sorted BAM/CRAM file.",
      "name": "--create-output-bam-index",
      "synonyms": "-OBI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a MD5 digest for any BAM/SAM/CRAM file created",
      "name": "--create-output-bam-md5",
      "synonyms": "-OBM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a VCF index when writing a coordinate-sorted VCF file.",
      "name": "--create-output-variant-index",
      "synonyms": "-OVI",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "true",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, create a a MD5 digest any VCF file created.",
      "name": "--create-output-variant-md5",
      "synonyms": "-OVM",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If true, don\u0027t cache bam indexes, this will reduce memory requirements but may harm performance if many intervals are specified.  Caching is automatically disabled if there are no intervals specified.",
      "name": "--disable-bam-index-caching",
      "synonyms": "-DBIC",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Read filters to be disabled before analysis",
      "name": "--disable-read-filter",
      "synonyms": "-DF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If specified, do not check the sequence dictionaries from our inputs for compatibility. Use at your own risk!",
      "name": "--disable-sequence-dictionary-validation",
      "synonyms": "-disable-sequence-dictionary-validation",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Disable all tool default read filters (WARNING: many tools will not function correctly without their default read filters on)",
      "name": "--disable-tool-default-read-filters",
      "synonyms": "-disable-tool-default-read-filters",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "One or more genomic intervals to exclude from processing",
      "name": "--exclude-intervals",
      "synonyms": "-XL",
      "type": "List[String]",
      "required": "no",
      "fulltext": "Use this argument to exclude certain parts of the genome from the analysis (like -L, but the opposite).\n This argument can be specified multiple times. You can use samtools-style intervals either explicitly on the\n command line (e.g. -XL 1 or -XL 1:100-200) or by loading in a file containing a list of intervals\n (e.g. -XL myFile.intervals).",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A configuration file to use with the GATK.",
      "name": "--gatk-config-file",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "If the GCS bucket channel errors out, how many times it will attempt to re-initiate the connection",
      "name": "--gcs-max-retries",
      "synonyms": "-gcs-retries",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "20",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Project to bill when accessing \"requester pays\" buckets. If unset, these buckets cannot be accessed.  User must have storage.buckets.get permission on the bucket being accessed.",
      "name": "--gcs-project-for-requester-pays",
      "synonyms": "NA",
      "type": "String",
      "required": "no",
      "fulltext": "",
      "defaultValue": "\"\"",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "display the help message",
      "name": "--help",
      "synonyms": "-h",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "BAM/SAM/CRAM file containing reads",
      "name": "--input",
      "synonyms": "-I",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are excluding.",
      "name": "--interval-exclusion-padding",
      "synonyms": "-ixp",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -XL. For example, \u0027-XL 1:100\u0027 with a\n padding value of 20 would turn into \u0027-XL 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Interval merging rule for abutting intervals",
      "name": "--interval-merging-rule",
      "synonyms": "-imr",
      "type": "IntervalMergingRule",
      "required": "no",
      "fulltext": "By default, the program merges abutting intervals (i.e. intervals that are directly side-by-side but do not\n actually overlap) into a single continuous interval. However you can change this behavior if you want them to be\n treated as separate intervals instead.",
      "defaultValue": "ALL",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": [
        {
          "summary": "",
          "name": "ALL"
        },
        {
          "summary": "",
          "name": "OVERLAPPING_ONLY"
        }
      ]
    },
    {
      "summary": "Amount of padding (in bp) to add to each interval you are including.",
      "name": "--interval-padding",
      "synonyms": "-ip",
      "type": "int",
      "required": "no",
      "fulltext": "Use this to add padding to the intervals specified using -L. For example, \u0027-L 1:100\u0027 with a\n padding value of 20 would turn into \u0027-L 1:80-120\u0027. This is typically used to add padding around targets when\n analyzing exomes.",
      "defaultValue": "0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Set merging approach to use for combining interval inputs",
      "name": "--interval-set-rule",
      "synonyms": "-isr",
      "type": "IntervalSetRule",
      "required": "no",
      "fulltext": "By default, the program will take the UNION of all intervals specified using -L and/or -XL. However, you can\n change this setting for -L, for example if you want to take the INTERSECTION of the sets instead. E.g. to\n perform the analysis only on chromosome 1 exomes, you could specify -L exomes.intervals -L 1 --interval-set-rule\n INTERSECTION. However, it is not possible to modify the merging approach for intervals passed using -XL (they will\n always be merged using UNION).\n\n Note that if you specify both -L and -XL, the -XL interval set will be subtracted from the -L interval set.",
      "defaultValue": "UNION",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "Take the union of all intervals",
          "name": "UNION"
        },
        {
          "summary": "Take the intersection of intervals (the subset that overlaps all intervals specified)",
          "name": "INTERSECTION"
        }
      ]
    },
    {
      "summary": "One or more genomic intervals over which to operate",
      "name": "--intervals",
      "synonyms": "-L",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Lenient processing of VCF files",
      "name": "--lenient",
      "synonyms": "-LE",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Length in bp. Provide to annotate BNDs smaller than this size as deletions or duplications if applicable. Recommended value: \u003c 2000000",
      "name": "--max-breakend-as-cnv-length",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "-1",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "If non-zero, partitions VCF output into shards, each containing up to the given number of records.",
      "name": "--max-variants-per-shard",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "0",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "BED file (with header) containing non-coding features. Columns: chrom, start, end, name, score (.), strand",
      "name": "--non-coding-bed",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Output file (if not provided, defaults to STDOUT)",
      "name": "--output",
      "synonyms": "-O",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Promoter window (bp) upstream of TSS. Promoters will be inferred as the {window} bases upstream of the TSS. Default: 1000",
      "name": "--promoter-window-length",
      "synonyms": "NA",
      "type": "int",
      "required": "no",
      "fulltext": "",
      "defaultValue": "1000",
      "minValue": "0.0",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Protein-coding GTF file containing primary or canonical transcripts (1-2 transcripts per gene only)",
      "name": "--protein-coding-gtf",
      "synonyms": "NA",
      "type": "File",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Whether to suppress job-summary info on System.err.",
      "name": "--QUIET",
      "synonyms": "NA",
      "type": "Boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Read filters to be applied before analysis",
      "name": "--read-filter",
      "synonyms": "-RF",
      "type": "List[String]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Indices to use for the read inputs. If specified, an index must be provided for every read input and in the same order as the read inputs. If this argument is not specified, the path to the index for each input will be inferred automatically.",
      "name": "--read-index",
      "synonyms": "-read-index",
      "type": "List[GATKPath]",
      "required": "no",
      "fulltext": "",
      "defaultValue": "[]",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Validation stringency for all SAM/BAM/CRAM/SRA files read by this program.  The default stringency value SILENT can improve performance when processing a BAM file in which variable-length data (read, qualities, tags) do not otherwise need to be decoded.",
      "name": "--read-validation-stringency",
      "synonyms": "-VS",
      "type": "ValidationStringency",
      "required": "no",
      "fulltext": "",
      "defaultValue": "SILENT",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "STRICT"
        },
        {
          "summary": "",
          "name": "LENIENT"
        },
        {
          "summary": "",
          "name": "SILENT"
        }
      ]
    },
    {
      "summary": "Reference sequence",
      "name": "--reference",
      "synonyms": "-R",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Output traversal statistics every time this many seconds elapse",
      "name": "--seconds-between-progress-updates",
      "synonyms": "-seconds-between-progress-updates",
      "type": "double",
      "required": "no",
      "fulltext": "",
      "defaultValue": "10.0",
      "minValue": "-Infinity",
      "maxValue": "Infinity",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Use the given sequence dictionary as the master/canonical sequence dictionary.  Must be a .dict file.",
      "name": "--sequence-dictionary",
      "synonyms": "-sequence-dictionary",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "display hidden arguments",
      "name": "--showHidden",
      "synonyms": "-showHidden",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "advanced",
      "options": []
    },
    {
      "summary": "If true, don\u0027t emit genotype fields when writing vcf file output.",
      "name": "--sites-only-vcf-output",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    },
    {
      "summary": "Temp directory to use.",
      "name": "--tmp-dir",
      "synonyms": "NA",
      "type": "GATKPath",
      "required": "no",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to use the JdkDeflater (as opposed to IntelDeflater)",
      "name": "--use-jdk-deflater",
      "synonyms": "-jdk-deflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "Whether to use the JdkInflater (as opposed to IntelInflater)",
      "name": "--use-jdk-inflater",
      "synonyms": "-jdk-inflater",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": []
    },
    {
      "summary": "A VCF file containing variants",
      "name": "--variant",
      "synonyms": "-V",
      "type": "GATKPath",
      "required": "yes",
      "fulltext": "",
      "defaultValue": "null",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "required",
      "options": []
    },
    {
      "summary": "Control verbosity of logging.",
      "name": "--verbosity",
      "synonyms": "-verbosity",
      "type": "LogLevel",
      "required": "no",
      "fulltext": "",
      "defaultValue": "INFO",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "common",
      "options": [
        {
          "summary": "",
          "name": "ERROR"
        },
        {
          "summary": "",
          "name": "WARNING"
        },
        {
          "summary": "",
          "name": "INFO"
        },
        {
          "summary": "",
          "name": "DEBUG"
        }
      ]
    },
    {
      "summary": "display the version number for this tool",
      "name": "--version",
      "synonyms": "NA",
      "type": "boolean",
      "required": "no",
      "fulltext": "",
      "defaultValue": "false",
      "minValue": "NA",
      "maxValue": "NA",
      "minRecValue": "NA",
      "maxRecValue": "NA",
      "kind": "optional",
      "options": []
    }
  ],
  "description": "Adds gene overlap, predicted functional consequence, and noncoding element overlap annotations to\n a structural variant (SV) VCF from the GATK-SV pipeline.\n\n \u003ch3\u003eInputs\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         VCF containing structural variant (SV) records from the GATK-SV pipeline\n     \u003c/li\u003e\n     \u003cli\u003e\n         GTF file containing primary or canonical transcripts (optional; required for protein-coding gene,\n         transcription start site, and promoter overlap annotations)\n     \u003c/li\u003e\n     \u003cli\u003e\n         BED file of noncoding elements in which the fourth column specifies the type of element\n         (optional; required for noncoding element overlap annotations)\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eOutput\u003c/h3\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\n         Annotated VCF\n     \u003c/li\u003e\n \u003c/ul\u003e\n\n \u003ch3\u003eUsage example\u003c/h3\u003e\n\n \u003cpre\u003e\n     gatk SVAnnotate \\\n       -V structural.vcf.gz \\\n       --protein-coding-gtf canonical.gtf \\\n       --non-coding-bed noncoding.bed \\\n       -O annotated.vcf.gz\n \u003c/pre\u003e\n\n \u003ch3\u003eAnnotation categories\u003c/h3\u003e\n \u003cp\u003e\n     If a variant overlaps a gene, promoter, or noncoding element, the predicted functional impact will be annotated\n     and the gene or noncoding element name listed. The list below describes the functional consequence categories\n     in more detail. For complex variants (CPX), the annotations represent the union of the independent annotations\n     of each component of the complex event according to its coordinates and SV type.\n \u003c/p\u003e\n\n \u003cul\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_LOF\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) on which the SV is predicted to have a loss-of-function (LOF) effect.\n     The conditions for a LOF consequence depend on the SV type:\n     \u003cul\u003e\n         \u003cli\u003e\n             Deletion (DEL): the deletion overlaps any coding sequence (CDS) or the TSS\n         \u003c/li\u003e\n         \u003cli\u003e\n             Duplication (DUP): the duplication has both breakpoints in CDS, or one breakpoint in CDS and\n             another in the 3\u0027 or 5\u0027 untranslated region (UTR)\n         \u003c/li\u003e\n         \u003cli\u003e\n             Insertion (INS): the insertion falls within CDS\n         \u003c/li\u003e\n         \u003cli\u003e\n             Inversion (INV): the inversion overlaps any coding sequence (CDS) or the TSS, except if it spans\n             the entire gene (\u003ci\u003ePREDICTED_INV_SPAN\u003c/i\u003e)\n         \u003c/li\u003e\n         \u003cli\u003e\n             Translocation (CTX): any translocation breakpoint falls within the transcript\n         \u003c/li\u003e\n         \u003cli\u003e\n             Multiallelic copy number variant (CNV): not annotated as \u003ci\u003ePREDICTED_LOF\u003c/i\u003e.\n             See \u003ci\u003ePREDICTED_MSV_EXON_OVERLAP\u003c/i\u003e\n         \u003c/li\u003e\n         \u003cli\u003e\n             Breakend (BND): not annotated as \u003ci\u003ePREDICTED_LOF\u003c/i\u003e. See \u003ci\u003ePREDICTED_BREAKEND_EXONIC\u003c/i\u003e\n         \u003c/li\u003e\n     \u003c/ul\u003e\n     \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_COPY_GAIN\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) on which the SV is predicted to have a copy-gain effect. This occurs when a duplication spans the entire\n     transcript, from the first base of the 5\u0027 UTR to the last base of the 3\u0027 UTR. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_INTRAGENIC_EXON_DUP\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) on which the SV is predicted to result in intragenic exonic duplication without breaking any coding\n     sequences. This occurs when a duplication spans at least one coding exon and neither breakpoint is in CDS; both\n     breakpoints are in UTR or intron. The result is that intact exons are duplicated within the boundaries of the\n     gene body. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_PARTIAL_EXON_DUP\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) where the duplication SV has one breakpoint in the coding sequence. This occurs when a duplication\n     has exactly one breakpoint in CDS and the other breakpoint is in intron or UTR. When the duplication is in\n     tandem, the result is that the endogenous copy of the breakpoint-harboring exon remains intact and a partial\n     duplicate copy of that exon is also found elsewhere in the same gene.\u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_TSS_DUP\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) for which the SV is predicted to duplicate the transcription start site (TSS). This occurs when a\n     duplication has one breakpoint before the start of a transcript and the other breakpoint within the transcript.\n     When the duplication is in tandem, the result is that there is one intact copy of the full endogenous gene, but\n     an additional transcription start site is duplicated upstream (5\u0027) of the endogenous TSS. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_DUP_PARTIAL\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) which are partially overlapped by an SV\u0027s duplication, but the transcription start site is not\n     duplicated. The partial duplication occurs when a duplication has one breakpoint within the transcript and one\n     breakpoint after the end of the transcript. When the duplication is in tandem, the result is that there is one\n     intact copy of the full endogenous gene.\u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_INV_SPAN\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) which are entirely spanned by an SV\u0027s inversion. A whole-gene inversion occurs when an inversion spans\n     the entire transcript, from the first base of the 5\u0027 UTR to the last base of the 3\u0027 UTR. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_MSV_EXON_OVERLAP\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) on which the multiallelic CNV would be predicted to have a LOF, INTRAGENIC_EXON_DUP, COPY_GAIN,\n     DUP_PARTIAL, TSS_DUP, or PARTIAL_EXON_DUP annotation if the SV were biallelic. The functional impact of the\n     multiallelic CNV on an individual sample depends on the copy number of the individual. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_UTR\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) for which the SV is predicted to disrupt a UTR. This occurs when the SV has at least one breakpoint in\n     a gene\u0027s 5\u0027 or 3\u0027 UTR but does not meet any of the criteria for a different gene-disrupting categorization\n     above.\u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_INTRONIC\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) where the SV was found to lie entirely within an intron. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_BREAKEND_EXONIC\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) for which the SV breakend is predicted to fall in an exon. This category is reserved for breakend (BND)\n     SVs with a breakpoint in CDS. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_INTERGENIC\u003c/i\u003e\u003cbr /\u003e\n     SV does not overlap any protein-coding gene transcripts in the GTF. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_PROMOTER\u003c/i\u003e\u003cbr /\u003e\n     Gene(s) for which the SV is predicted to overlap the promoter region. This occurs when the variant overlaps the\n     predicted promoter region but does not overlap the transcript. The promoter region is inferred from the GTF as a\n     window upstream of the TSS. The size of the window can be altered with the --promoter-window-length\n     argument. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_NEAREST_TSS\u003c/i\u003e\u003cbr /\u003e\n     Nearest transcription start site to an intergenic variant. The gene with the nearest TSS to either side of the SV\n     is annotated for intergenic variants that do not overlap any promoter regions. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_NONCODING_SPAN\u003c/i\u003e\u003cbr /\u003e\n     Class(es) of noncoding elements spanned by SV. \u003c/p\u003e\u003c/li\u003e\n     \u003cli\u003e\u003cp\u003e\u003ci\u003ePREDICTED_NONCODING_BREAKPOINT\u003c/i\u003e\u003cbr /\u003e\n     Class(es) of noncoding elements disrupted by SV breakpoint. \u003c/p\u003e\u003c/li\u003e\n\n \u003c/ul\u003e",
  "name": "SVAnnotate",
  "group": "Structural Variant Discovery",
  "beta": false,
  "experimental": false
}